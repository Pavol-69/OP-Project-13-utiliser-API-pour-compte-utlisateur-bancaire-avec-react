openapi: 3.0.3
info:
  title: Swagger Argent Bank - OpenAPI 3.0
  description: |-
    For the second phase of our Argent Application, we need to define the transactions API calls in order to allow the user to :
    - Visualize all their transactions for the on going month, grouped by bank account
    - Visualize all transactions details in another view
    - Add / update / delete informations about a transaction
    
    For the first phase, you can check our Github repository :
    - [Argent Bank repository](https://github.com/Pavol-69/OP-Project-13-utiliser-API-pour-compte-utlisateur-bancaire-avec-react)


  version: 1.0.0

tags:
  - name: transaction
    description: All calls relative to transaction
    externalDocs:
      description: Find out more
      url: http://swagger.io

paths:
  /api/v1/user/getAllTransactionsFromCurrentMonth:
    get:
      tags:
        - transaction
      summary: Get all user transactions from current month
      description: Get all user transactions from the on going month for all user bank account. No date as input data, the current date will be readen directly in API
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token to identify the user we want all the transactions
          required: true
          schema:
            type: string
            default: available

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    xml:
                      wrapped: true
                    items:
                      $ref: '#/components/schemas/Account'
                  transactions:
                    type: array
                    xml:
                      wrapped: true
                    items:
                      $ref: '#/components/schemas/Transaction'
        '404':
          description: User not found
      security:
        - Bearer: []
        
  
  /transaction/add/{accountId}:
    post:
      tags:
        - transaction
      summary: Add a new transaction
      description: Add a new transactionin the account corresponding to the id
      operationId: addTransaction
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token to identify the user making the transaction
          required: true
          schema:
            type: string
            default: available
        - name: accountId
          in: path
          description: ID of account where to add the new transaction
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: transactyion successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'          

        '400':
          description: Invalid account ID supplied
        '404':
          description: User not found
      security:
        - Bearer: []



  /transaction/{transactionId}:
    get:
      tags:
        - transaction
      summary: Find transaction by ID
      description: Returns a single transaction
      operationId: getTransactionById
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token to identify the user asking for the transaction
          required: true
          schema:
            type: string
            default: available
        - name: transactionId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'          
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
      security:
        - Bearer: []
    put:
      tags:
        - transaction
      summary: Updates a transaction with form data
      description: Update a transaction with form data, we can only update the description
      operationId: updateTransaction
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token to identify the user asking for the transaction
          required: true
          schema:
            type: string
            default: available
        - name: transactionId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: accountId
          in: query
          description: Account where the transaction has been made
          schema:
            type: integer
            format: int64
        - name: amount
          in: query
          description: Amount of the transaction
          schema:
            type: number
        - name: currency
          in: query
          description: currency of the transaction
          schema:
            type: string
        - name: date
          in: query
          description: date of the transaction
          schema:
            type: string
            format: date
        - name: description
          in: query
          description: description of the transaction
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'          
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
      security:
        - Bearer: []
    delete:
      tags:
        - transaction
      summary: Deletes a transaction
      description: delete a transaction
      operationId: deletetransaction
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token to identify the user asking for the transaction
          required: true
          schema:
            type: string
            default: available
        - name: transactionId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
      security:
        - Bearer: []


components:
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        userId:
          type: integer
          format: int64
          example: 1
        accountId:
          type: integer
          format: int64
          example: 1
        amount:
          type: number
          example: 100
        currency:
          type: string
          example: â‚¬
        date:
          type: string
          format: date
          example: '20/12/2025'
        description:
          type: string
          example: groceries
      xml:
        name: transaction
    Account:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        userId:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Argent Bank Credit Card (x8349)
        transactions:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Transaction'
      xml:
        name: account

  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header